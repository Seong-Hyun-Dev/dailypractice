// ! DeepDiveJS
// - 변수
// - 표현식과 문
// - 데이터타입
// - 연산자
// - 제어문
// - 타입 변환과 단축 평가
// - 객체 리터럴
// - 원시 값과 객체의 비교
// - 함수
// - 스코프
// - 전역변수의 문제점
// - let, const 키워드와 블록 레벨 스코프
// - 프로퍼티 어트리뷰트
// - 생성자 함수에 의한 객체 생성
// - 함수와 일급 객체
// - 프로토타입
// - strict mode
// - 빌트인 객체
// - this
// - 실행 컨텍스트
// - 클로저
// - 클래스
// - ES6 함수의 추가 기능
// - 배열
// - Number
// - Math
// - Date
// - RegExp
// - String
// - 7번째 데이터 타입 Symbol
// - 이터러블
// - 스프레드 문법
// - 디스트럭처링 할당
// - Set과 Map
//! - 브라우저의 렌더링 과정
//  -- 요청과 응답
//  -- HTTP 1.1과 HTTP 2.0
//  -- HTML 파싱과 DOM 생성
//  -- CSS 파싱과 CSSOM 생성
//  -- 렌더 트리 생성
//  -- 자바스크립트 파싱과 실행
//  -- 리플로우와 리페인트
//  -- 자바스크립트 파싱에 의한 HTML 파싱 중단
//  -- script 태그의 async/defer 어트리뷰트
//! - DOM
//  -- 노드
//  -- 요소 노드 취득
//  -- 노드 탐색
//  -- 노드 정보 취득
//  -- 요소 노드의 텍스트 조작
//  -- DOM 조작
//  -- 어트리뷰트
//  -- 스타일
//  -- DOM 표준
//! - 이벤트
//  -- 이벤트 드리븐 프로그래밍
//  -- 이벤트 타입
//  -- 이벤트 핸들러 등록
//  -- 이벤트 핸들러 제거
//  -- 이벤트 객체
//  -- 이벤트 전파
//  -- 이벤트 위임
//  -- DOM 요소의 기본 동작의 조작
//  -- 이벤트 핸들러 내부의 this
//  -- 이벤트 핸들러에 인수 전달
//  -- 커스텀 이벤트
//! - 타이머
//  -- 호출 스케줄링
//  -- 타이머 함수
//  -- 디바운스와 스로틀
//! - 비동기 프로그래밍
//  -- 동기 처리와 비동기 처리
//  -- 이벤트 루프와 태스크 큐
//! - Ajax
//  -- Ajax?
//  -- JSON
//  -- XMLHttpRequest
// - Rest API
//  -- REST API의 구성
//  -- REST API 설계 원칙
//  -- JSON Server를 이용한 REST API 실습
//! - 프로미스
//  -- 비동기 처리를 위한 콜백 패턴의 단점
//  -- 프로미스의 생성
//  -- 프로미스의 후속 처리 메서드
//  -- 프로미스의 에러 처리
//  -- 프로미스 체이닝
//  -- 프로미스의 정적 메서드
//  -- 마이크로태스크 큐
//  -- fetch
//! - 제너레이터와 async/await
//  -- 제너레이터?
//  -- 정의
//  -- 제너레이터 객체
//  -- 일시중지, 재개
//  -- 활용
//  -- async/await
// - 에러 처리
//  -- 에러 처리의 필요성
//  -- try catch finally
//  -- Error 객체
//  -- throw 문
//  -- 에러의 전파
// - 모듈
// - Babel과 Webpack을 이용한 ES6+/ES.NEXT개발 환경 구축
